{"ast":null,"code":"import { withSuperJSONPage as _withSuperJSONPage } from \"babel-plugin-superjson-next/tools\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouterQuery, Link, useMutation } from \"blitz\";\nimport Layout from \"app/core/layouts/Layout\";\nimport { LabeledTextField } from \"app/core/components/LabeledTextField\";\nimport { Form, FORM_ERROR } from \"app/core/components/Form\";\nimport { ResetPassword } from \"app/auth/validations\";\nimport resetPassword from \"app/auth/mutations/resetPassword\";\n\nconst ResetPasswordPage = () => {\n  const query = useRouterQuery();\n  const [resetPasswordMutation, {\n    isSuccess\n  }] = useMutation(resetPassword);\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"Set a New Password\"), isSuccess ? __jsx(\"div\", null, __jsx(\"h2\", null, \"Password Reset Successfully\"), __jsx(\"p\", null, \"Go to the \", __jsx(Link, {\n    href: \"/\"\n  }, \"homepage\"))) : __jsx(Form, {\n    submitText: \"Reset Password\",\n    schema: ResetPassword.omit({\n      token: true\n    }),\n    initialValues: {\n      password: \"\",\n      passwordConfirmation: \"\"\n    },\n    onSubmit: async values => {\n      try {\n        await resetPasswordMutation(_objectSpread(_objectSpread({}, values), {}, {\n          token: query.token\n        }));\n      } catch (error) {\n        if (error.name === \"ResetPasswordError\") {\n          return {\n            [FORM_ERROR]: error.message\n          };\n        } else {\n          return {\n            [FORM_ERROR]: \"Sorry, we had an unexpected error. Please try again.\"\n          };\n        }\n      }\n    }\n  }, __jsx(LabeledTextField, {\n    name: \"password\",\n    label: \"New Password\",\n    type: \"password\"\n  }), __jsx(LabeledTextField, {\n    name: \"passwordConfirmation\",\n    label: \"Confirm New Password\",\n    type: \"password\"\n  })));\n};\n\nResetPasswordPage.redirectAuthenticatedTo = \"/\";\n\nResetPasswordPage.getLayout = page => __jsx(Layout, {\n  title: \"Reset Your Password\"\n}, page);\n\nexport default _withSuperJSONPage(ResetPasswordPage);","map":null,"metadata":{},"sourceType":"module"}